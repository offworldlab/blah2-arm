user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    default_type application/octet-stream;
    include /etc/nginx/mime.types;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        include /etc/nginx/mime.types;

        # Use container name for web frontend (both on blah2 network)
        set $backend_web blah2-web;
        
        # Use Docker bridge gateway for API (API uses host networking)
        set $backend_api 172.17.0.1;
        
        set $domain_name localhost;

        proxy_pass_header Content-Type;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5;
        proxy_read_timeout 60;
        proxy_send_timeout 60;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_intercept_errors on;

        # Route to web frontend (blah2-web container port 80)
        location / {
            proxy_pass http://$backend_web:80;
        }

        # Route API calls to host machine (API uses host networking on port 3000)
        location ~ ^/(maxhold|api|stash)/(.*) {
            proxy_pass http://$backend_api:3000/$1/$2;
        }

        error_page 501 502 503 504 =200 /error.html;
        location = /error.html {
            root /usr/local/apache2/htdocs;
        }
    }
}
